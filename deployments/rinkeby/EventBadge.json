{
  "address": "0x2A6275f28Bb12567CfCf187537A00d6600a4850B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "badgeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eventStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eventEnd",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EventBadge__EventExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EventBadge__SendCorrectPaymentAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EventBadge__UpkeepNotNeeded",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        }
      ],
      "name": "BadgePurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EventHasExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EventHasStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyBadge",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dt_eventEndDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dt_eventStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isBadgeAvailableForSale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isEventLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_badgeHolders",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_eventState",
      "outputs": [
        {
          "internalType": "enum EventBadge.EventState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1cc971c27b7db27b7b73ba9c16302507c379223c8d11ae27519936f73b1071e2",
  "receipt": {
    "to": null,
    "from": "0x896A1abF5dc45105Cb9268A73876f62E4dC7dFe7",
    "contractAddress": "0x2A6275f28Bb12567CfCf187537A00d6600a4850B",
    "transactionIndex": 14,
    "gasUsed": "667283",
    "logsBloom": "0x
    "blockHash": "0x9b19627e88322d053a6e7c342f17cbf8f5dbace1696b8fb5b3627a0e74abf91e",
    "transactionHash": "0x1cc971c27b7db27b7b73ba9c16302507c379223c8d11ae27519936f73b1071e2",
    "logs": [],
    "blockNumber": 10760045,
    "cumulativeGasUsed": "4929971",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "100000000000000000",
    1654527600000,
    1654534800000
  ],
  "numDeployments": 1,
  "solcInputHash": "4ddcb0dfe3138db4febd2a81d5f5a965",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"badgeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EventBadge__EventExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EventBadge__SendCorrectPaymentAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EventBadge__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"}],\"name\":\"BadgePurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EventHasExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EventHasStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyBadge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dt_eventEndDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dt_eventStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBadgeAvailableForSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEventLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_badgeHolders\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_eventState\",\"outputs\":[{\"internalType\":\"enum EventBadge.EventState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EventBadge.sol\":\"EventBadge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EventBadge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nerror EventBadge__SendCorrectPaymentAmount();\\r\\nerror EventBadge__EventExpired();\\r\\nerror EventBadge__UpkeepNotNeeded();\\r\\n\\r\\ncontract EventBadge {\\r\\n    enum EventState {\\r\\n        Pending,\\r\\n        Live,\\r\\n        Expired\\r\\n    }\\r\\n\\r\\n    EventState public s_eventState;\\r\\n    uint256 private immutable i_badgeFee;\\r\\n    uint256 public dt_eventStartDate;\\r\\n    uint256 public dt_eventEndDate;\\r\\n    address payable[] public s_badgeHolders;\\r\\n\\r\\n    event BadgePurchased(address indexed purchaser);\\r\\n    event EventHasStarted();\\r\\n    event EventHasExpired();\\r\\n\\r\\n    constructor(\\r\\n        uint256 badgeFee,\\r\\n        uint256 eventStart,\\r\\n        uint256 eventEnd\\r\\n    ) {\\r\\n        i_badgeFee = badgeFee;\\r\\n        dt_eventStartDate = eventStart;\\r\\n        dt_eventEndDate = eventEnd;\\r\\n    }\\r\\n\\r\\n    function buyBadge() external payable {\\r\\n        // Send the right amount of money\\r\\n        if (msg.value < i_badgeFee) {\\r\\n            revert EventBadge__SendCorrectPaymentAmount();\\r\\n        }\\r\\n        // Only allow purchase if the event hasn't expired\\r\\n        if (\\r\\n            s_eventState != EventState.Pending ||\\r\\n            s_eventState != EventState.Live\\r\\n        ) {\\r\\n            revert EventBadge__EventExpired();\\r\\n        }\\r\\n        if (block.timestamp >= dt_eventEndDate) {\\r\\n            revert EventBadge__EventExpired();\\r\\n        }\\r\\n\\r\\n        s_badgeHolders.push(payable(msg.sender));\\r\\n        emit BadgePurchased(msg.sender);\\r\\n    }\\r\\n\\r\\n    function isEventLive() public view returns (bool) {\\r\\n        return\\r\\n            block.timestamp > dt_eventStartDate &&\\r\\n            block.timestamp < dt_eventEndDate;\\r\\n    }\\r\\n\\r\\n    function isBadgeAvailableForSale() public view returns (bool) {\\r\\n        return block.timestamp < dt_eventEndDate;\\r\\n    }\\r\\n\\r\\n    function checkUpkeep(bytes calldata /* checkData */)\\r\\n        public\\r\\n        view\\r\\n        returns (bool upkeepNeeded, bytes memory /* performData */)\\r\\n    {\\r\\n        bool needsUpdating = false;\\r\\n\\r\\n        // Event has expired, no longer need to watch for this so exit early\\r\\n        if (s_eventState == EventState.Expired) {\\r\\n            return (needsUpdating, \\\"0x0\\\");\\r\\n        }\\r\\n\\r\\n        // If event is flagged pending but the event has started\\r\\n        if (s_eventState == EventState.Pending) {\\r\\n            if (block.timestamp > dt_eventStartDate) {\\r\\n                needsUpdating = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // If the event has expired\\r\\n        if (s_eventState == EventState.Live) {\\r\\n            if (block.timestamp < dt_eventEndDate) {\\r\\n                needsUpdating = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (needsUpdating, \\\"0x0\\\");\\r\\n    }\\r\\n\\r\\n    function performUpkeep(bytes calldata performData) external {\\r\\n        (bool upkeepNeeded, ) = checkUpkeep(performData);\\r\\n        if (!upkeepNeeded) {\\r\\n            revert EventBadge__UpkeepNotNeeded();\\r\\n        }\\r\\n\\r\\n        if (block.timestamp > dt_eventStartDate) {\\r\\n            s_eventState = EventState.Live;\\r\\n            emit EventHasStarted();\\r\\n        }\\r\\n        if (block.timestamp >= dt_eventEndDate) {\\r\\n            s_eventState = EventState.Expired;\\r\\n            emit EventHasExpired();\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x398299f7983b3dd614c987b14677970e2b183252a28ef16853b4e79f1f00b8a2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610b41380380610b4183398181016040528101906100329190610065565b826080818152505081600181905550806002819055505050506100de565b60008151905061005f816100c7565b92915050565b60008060006060848603121561007e5761007d6100c2565b5b600061008c86828701610050565b935050602061009d86828701610050565b92505060406100ae86828701610050565b9150509250925092565b6000819050919050565b600080fd5b6100d0816100b8565b81146100db57600080fd5b50565b608051610a486100f960003960006104d20152610a486000f3fe6080604052600436106100865760003560e01c80636e04ff0d116100595780636e04ff0d146101475780639d896dea14610185578063aa87778d146101b0578063b32db8f5146101ba578063f355fb23146101e557610086565b806302c63a961461008b57806344192311146100c857806344c14b48146100f35780634585e33b1461011e575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610794565b610210565b6040516100bf9190610836565b60405180910390f35b3480156100d457600080fd5b506100dd61024f565b6040516100ea91906108b7565b60405180910390f35b3480156100ff57600080fd5b50610108610255565b604051610115919061089c565b60405180910390f35b34801561012a57600080fd5b5061014560048036038101906101409190610747565b610266565b005b34801561015357600080fd5b5061016e60048036038101906101699190610747565b610372565b60405161017c92919061086c565b60405180910390f35b34801561019157600080fd5b5061019a6104ca565b6040516101a791906108b7565b60405180910390f35b6101b86104d0565b005b3480156101c657600080fd5b506101cf6106b7565b6040516101dc9190610851565b60405180910390f35b3480156101f157600080fd5b506101fa6106c3565b6040516102079190610851565b60405180910390f35b6003818154811061022057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60008054906101000a900460ff1681565b60006102728383610372565b509050806102ac576040517f7413111700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015442111561030d5760016000806101000a81548160ff021916908360028111156102db576102da61098e565b5b02179055507f2360e4b44c0095891e769716b72218cc63372b67cef7dee196aedbb334491d6160405160405180910390a15b600254421061036d5760026000806101000a81548160ff0219169083600281111561033b5761033a61098e565b5b02179055507fdbdc074987445c445a4b61e57bfbba14d00c902f5021fc54756e0a4b720f9eea60405160405180910390a15b505050565b60006060600060028081111561038b5761038a61098e565b5b60008054906101000a900460ff1660028111156103ab576103aa61098e565b5b14156103f257806040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525092509250506104c3565b600060028111156104065761040561098e565b5b60008054906101000a900460ff1660028111156104265761042561098e565b5b141561043c5760015442111561043b57600190505b5b600160028111156104505761044f61098e565b5b60008054906101000a900460ff1660028111156104705761046f61098e565b5b14156104865760025442101561048557600190505b5b806040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525092509250505b9250929050565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000034101561052a576040517faafd6c0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600281111561053e5761053d61098e565b5b60008054906101000a900460ff16600281111561055e5761055d61098e565b5b14158061059d57506001600281111561057a5761057961098e565b5b60008054906101000a900460ff16600281111561059a5761059961098e565b5b14155b156105d4576040517f56c6e62c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254421061060f576040517f56c6e62c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f2486a50c5151d3d0d89002ab75691d8fbae7b5649718374519e172525fa91a0360405160405180910390a2565b60006002544210905090565b6000600154421180156106d7575060025442105b905090565b60008083601f8401126106f2576106f16109c2565b5b8235905067ffffffffffffffff81111561070f5761070e6109bd565b5b60208301915083600182028301111561072b5761072a6109c7565b5b9250929050565b600081359050610741816109fb565b92915050565b6000806020838503121561075e5761075d6109d1565b5b600083013567ffffffffffffffff81111561077c5761077b6109cc565b5b610788858286016106dc565b92509250509250929050565b6000602082840312156107aa576107a96109d1565b5b60006107b884828501610732565b91505092915050565b6107ca816108ee565b82525050565b6107d981610900565b82525050565b60006107ea826108d2565b6107f481856108dd565b935061080481856020860161095b565b61080d816109d6565b840191505092915050565b61082181610949565b82525050565b6108308161093f565b82525050565b600060208201905061084b60008301846107c1565b92915050565b600060208201905061086660008301846107d0565b92915050565b600060408201905061088160008301856107d0565b818103602083015261089381846107df565b90509392505050565b60006020820190506108b16000830184610818565b92915050565b60006020820190506108cc6000830184610827565b92915050565b600081519050919050565b600082825260208201905092915050565b60006108f98261091f565b9050919050565b60008115159050919050565b600081905061091a826109e7565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109548261090c565b9050919050565b60005b8381101561097957808201518184015260208101905061095e565b83811115610988576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b600381106109f8576109f761098e565b5b50565b610a048161093f565b8114610a0f57600080fd5b5056fea2646970667358221220350429034eac7254a41e91bdea6630cabc27ee71be729a84905ef8c48f83539964736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80636e04ff0d116100595780636e04ff0d146101475780639d896dea14610185578063aa87778d146101b0578063b32db8f5146101ba578063f355fb23146101e557610086565b806302c63a961461008b57806344192311146100c857806344c14b48146100f35780634585e33b1461011e575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610794565b610210565b6040516100bf9190610836565b60405180910390f35b3480156100d457600080fd5b506100dd61024f565b6040516100ea91906108b7565b60405180910390f35b3480156100ff57600080fd5b50610108610255565b604051610115919061089c565b60405180910390f35b34801561012a57600080fd5b5061014560048036038101906101409190610747565b610266565b005b34801561015357600080fd5b5061016e60048036038101906101699190610747565b610372565b60405161017c92919061086c565b60405180910390f35b34801561019157600080fd5b5061019a6104ca565b6040516101a791906108b7565b60405180910390f35b6101b86104d0565b005b3480156101c657600080fd5b506101cf6106b7565b6040516101dc9190610851565b60405180910390f35b3480156101f157600080fd5b506101fa6106c3565b6040516102079190610851565b60405180910390f35b6003818154811061022057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60008054906101000a900460ff1681565b60006102728383610372565b509050806102ac576040517f7413111700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015442111561030d5760016000806101000a81548160ff021916908360028111156102db576102da61098e565b5b02179055507f2360e4b44c0095891e769716b72218cc63372b67cef7dee196aedbb334491d6160405160405180910390a15b600254421061036d5760026000806101000a81548160ff0219169083600281111561033b5761033a61098e565b5b02179055507fdbdc074987445c445a4b61e57bfbba14d00c902f5021fc54756e0a4b720f9eea60405160405180910390a15b505050565b60006060600060028081111561038b5761038a61098e565b5b60008054906101000a900460ff1660028111156103ab576103aa61098e565b5b14156103f257806040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525092509250506104c3565b600060028111156104065761040561098e565b5b60008054906101000a900460ff1660028111156104265761042561098e565b5b141561043c5760015442111561043b57600190505b5b600160028111156104505761044f61098e565b5b60008054906101000a900460ff1660028111156104705761046f61098e565b5b14156104865760025442101561048557600190505b5b806040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525092509250505b9250929050565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000034101561052a576040517faafd6c0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600281111561053e5761053d61098e565b5b60008054906101000a900460ff16600281111561055e5761055d61098e565b5b14158061059d57506001600281111561057a5761057961098e565b5b60008054906101000a900460ff16600281111561059a5761059961098e565b5b14155b156105d4576040517f56c6e62c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254421061060f576040517f56c6e62c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f2486a50c5151d3d0d89002ab75691d8fbae7b5649718374519e172525fa91a0360405160405180910390a2565b60006002544210905090565b6000600154421180156106d7575060025442105b905090565b60008083601f8401126106f2576106f16109c2565b5b8235905067ffffffffffffffff81111561070f5761070e6109bd565b5b60208301915083600182028301111561072b5761072a6109c7565b5b9250929050565b600081359050610741816109fb565b92915050565b6000806020838503121561075e5761075d6109d1565b5b600083013567ffffffffffffffff81111561077c5761077b6109cc565b5b610788858286016106dc565b92509250509250929050565b6000602082840312156107aa576107a96109d1565b5b60006107b884828501610732565b91505092915050565b6107ca816108ee565b82525050565b6107d981610900565b82525050565b60006107ea826108d2565b6107f481856108dd565b935061080481856020860161095b565b61080d816109d6565b840191505092915050565b61082181610949565b82525050565b6108308161093f565b82525050565b600060208201905061084b60008301846107c1565b92915050565b600060208201905061086660008301846107d0565b92915050565b600060408201905061088160008301856107d0565b818103602083015261089381846107df565b90509392505050565b60006020820190506108b16000830184610818565b92915050565b60006020820190506108cc6000830184610827565b92915050565b600081519050919050565b600082825260208201905092915050565b60006108f98261091f565b9050919050565b60008115159050919050565b600081905061091a826109e7565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109548261090c565b9050919050565b60005b8381101561097957808201518184015260208101905061095e565b83811115610988576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b600381106109f8576109f761098e565b5b50565b610a048161093f565b8114610a0f57600080fd5b5056fea2646970667358221220350429034eac7254a41e91bdea6630cabc27ee71be729a84905ef8c48f83539964736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14,
        "contract": "contracts/EventBadge.sol:EventBadge",
        "label": "s_eventState",
        "offset": 0,
        "slot": "0",
        "type": "t_enum(EventState)11"
      },
      {
        "astId": 18,
        "contract": "contracts/EventBadge.sol:EventBadge",
        "label": "dt_eventStartDate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 20,
        "contract": "contracts/EventBadge.sol:EventBadge",
        "label": "dt_eventEndDate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 23,
        "contract": "contracts/EventBadge.sol:EventBadge",
        "label": "s_badgeHolders",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address_payable)dyn_storage"
      }
    ],
    "types": {
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address_payable)dyn_storage": {
        "base": "t_address_payable",
        "encoding": "dynamic_array",
        "label": "address payable[]",
        "numberOfBytes": "32"
      },
      "t_enum(EventState)11": {
        "encoding": "inplace",
        "label": "enum EventBadge.EventState",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}